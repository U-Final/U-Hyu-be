spring:
  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: ${KAKAO_REST_API_KEY}
            client-name: Kakao
            redirect-uri: "http://localhost:8080/login/oauth2/code/{registrationId}"
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            scope:
              - profile_nickname
              - profile_image
              - account_email
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

  datasource:
    url: jdbc:postgresql://localhost:5432/testdb
    username: testuser
    password: testpass
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        format_sql: true
    show-sql: true

  liquibase:
    enabled: true
    change-log: classpath:db/changelog/changelog-master.yaml
    clear-checksums: true

jwt:
  secret: ${JWT_SECRET_KEY}
  access-token-expiration-time: ${ACCESS_TOKEN_EXP}
  refresh-token-expiration-days: ${REFRESH_TOKEN_EXP}
  cookie:
    domain: localhost
    secure: false
    same-site: Lax

domain:
  base-url: https://localhost:5173


logging:
  level:
    com.ureca.uhyu.domain.auth.jwt: debug
    com.ureca.uhyu.domain.auth.filter: debug
    com.ureca.uhyu.domain.auth.handler: debug
    org.hibernate.SQL: debug
    org.hibernate.type.descriptor.sql.BasicBinder: debug

fastapi:
  url: http://fastapi-server:8000  # 또는 EC2 고정 IP
